<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8"/>
  <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>표준체형과의 비교</title>
</head>

<body ontouchstart="">
<!-- 제목 -->
<h1>표준체형과의 비교</h1>

<script type="module">
  import * as THREE from "https://cdn.jsdelivr.net/npm/three@0.122.0/build/three.module.js";
  import {OrbitControls} from "https://cdn.jsdelivr.net/npm/three@0.122.0/examples/jsm/controls/OrbitControls.js";
  import {OBJLoader} from "https://cdn.jsdelivr.net/npm/three@0.122.0/examples/jsm/loaders/OBJLoader.js";
  import {MeshNormalMaterial} from "https://cdn.jsdelivr.net/npm/three@0.122.0/src/materials/MeshNormalMaterial.js";

  var scene1 = new THREE.Scene();
  var camera1 = new THREE.PerspectiveCamera(90, 1, 1, 100000);
  camera1.position.x = 20000;
  camera1.position.y = 13000;
  camera1.position.z = 0;

  var renderer1 = new THREE.WebGLRenderer();
  renderer1.setSize(window.innerWidth * 0.4, window.innerHeight * 0.7);
  renderer1.setClearColor(0xffffff);
  renderer1.border;
  document.body.appendChild(renderer1.domElement);

  var controls1 = new OrbitControls(camera1, renderer1.domElement);
  controls1.update();

  animate1();

  function animate1() {
    requestAnimationFrame(animate1);
    controls1.update();
    renderer1.render(scene1, camera1);
  }

  var loader1 = new OBJLoader();
  var material1 = new MeshNormalMaterial();

  var object1;
  var body1;
  loader1.load('/10-M-3D0001E.obj',
      function (object1) {
        object1.traverse(function (body1) {
          if (body1 instanceof THREE.Mesh) {
            body1.material = material1;
            body1.rotation.x = (Math.PI / 360 * 0);
            body1.rotation.y = (Math.PI / 360 * 260);
            body1.rotation.z = (Math.PI / 360 * 0);
          }
        });

        scene1.add(object1);
        return;
      });


// 사용자모델
var scene2 = new THREE.Scene();
  var camera2 = new THREE.PerspectiveCamera(90, 1, 10000, 2000000);
  camera2.position.x = 18000;
  camera2.position.y = 18000;
  camera2.position.z = -16000;

  var renderer2 = new THREE.WebGLRenderer();
  renderer2.setSize(window.innerWidth * 0.4, window.innerHeight * 0.7);
  renderer2.setClearColor(0xffffff);
  renderer2.border;
  document.body.appendChild(renderer2.domElement);

  var controls2 = new OrbitControls(camera2, renderer2.domElement);
  controls2.update();

  animate2();

  function animate2() {
    requestAnimationFrame(animate2);
    controls2.update();
    renderer2.render(scene2, camera2);
  }

  var loader2 = new OBJLoader();
  var material2 = new MeshNormalMaterial();

  var object2;
  var body2;
  loader2.load('/20avgm.obj.obj',
      function (object2) {
        object2.traverse(function (body2) {
          if (body2 instanceof THREE.Mesh) {
            body2.material = material2;

          }
        });

        scene2.add(object2);
        return;
      });
</script>
</body>
</html>
